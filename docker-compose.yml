# docker-compose.yml
version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.4
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password123
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KC_PROXY: edge
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak-network

  service-provider:
    build: 
      context: ./service-provider
      dockerfile: Dockerfile
    container_name: service-provider
    ports:
      - "3002:3002"  
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=myrealm
      - KEYCLOAK_CLIENT_ID=service-provider
      - KEYCLOAK_CLIENT_SECRET=BZDYM0gqJqI39ssvLakVk4rIWZxetz36  
      - SESSION_SECRET=your-session-secret-key
      - NODE_ENV=development
      - PORT=3002
    volumes:
      - ./service-provider:/app
      - /app/node_modules
    depends_on:
      - keycloak
    networks:
      - keycloak-network

volumes:
  postgres_data:

networks:
  keycloak-network:
    driver: bridge